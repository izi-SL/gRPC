syntax = "proto3";

package isuru.wallet.service;

option java_package = "com.isuru.wallet.service";
option java_multiple_files = true;

/*
 *  Service that deposit, withdraw user money and keep tack of the
 *  monetary balance in the system.
 */
service WalletService {

    /*
     * Make a deposit to given user with EUR, USD, GBP currencies.
     * Invalid currencies throw an <b>Unknown Currency</b> exception.
     */
    rpc Deposit (DepositRequest) returns (Empty) {}

    /*
     * Make a withdrawal from given user, if and only if the
     * user have the sufficient balance in wallet.Otherwise,
     * throw an <b>Insufficient Funds</b> exception.
     */
    rpc Withdraw (WithdrawalRequest) returns (Empty) {}

    /*
     * Return balance of given user
     *
     */
    rpc GetBalance (BalanceRequest) returns (BalanceResponse) {}

}

/*
 *
 */
message DepositRequest {
    Transaction deposit = 1;
}

/*
 *
 */
message WithdrawalRequest {
    Transaction withdrawal = 1;
}

message BalanceRequest {
    int32 user_id = 1;
}

message BalanceResponse {
    double amount = 1;
}

/*
 * Transaction resource for money deposit and withdrawal.
 */
message Transaction {
    int32 user_id = 1;
    double amount = 2;
    CurrencyType currency = 3;

    enum CurrencyType {
        EUR = 0;
        USD = 1;
        GBP = 2;
    }
}

/*
 * Generic empty message that use to send when there is no response to send.
 */
message Empty {}

